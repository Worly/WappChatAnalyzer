// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WappChatAnalyzer.Domain;

namespace WappChatAnalyzer.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20210320121150_AddDateTimeToEvent")]
    partial class AddDateTimeToEvent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WappChatAnalyzer.Domain.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Emoji")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("EventGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("EventGroupId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("WappChatAnalyzer.Domain.EventGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("EventGroups");
                });

            modelBuilder.Entity("WappChatAnalyzer.Domain.Event", b =>
                {
                    b.HasOne("WappChatAnalyzer.Domain.EventGroup", "EventGroup")
                        .WithMany()
                        .HasForeignKey("EventGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
